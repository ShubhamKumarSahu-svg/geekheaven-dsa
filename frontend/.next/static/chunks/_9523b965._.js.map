{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/context/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { Question, User } from '../types.d'; // Make sure Question is exported from your types\r\n\r\n// Extend the User type to include progress and bookmarks\r\ninterface UserProfile extends User {\r\n  completedQuestions: Question[]; // Now storing the full Question object\r\n  bookmarkedQuestions: Question[];\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: UserProfile | null;\r\n  token: string | null;\r\n  login: (userData: User, token: string) => void;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  toggleQuestionProgress: (questionId: string) => void;\r\n  toggleQuestionBookmark: (questionId: string) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<UserProfile | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchUserProfile = async (authToken: string) => {\r\n    try {\r\n      const response = await fetch(\r\n        'http://localhost:5000/api/v1/user/profile',\r\n        {\r\n          headers: { Authorization: `Bearer ${authToken}` },\r\n        }\r\n      );\r\n      if (!response.ok) throw new Error('Failed to fetch profile');\r\n      const { data } = await response.json();\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      logout(); // If token is invalid, log out\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      fetchUserProfile(storedToken);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData: User, token: string) => {\r\n    localStorage.setItem('token', token);\r\n    // We don't store the full user object anymore, just the basic info\r\n    localStorage.setItem(\r\n      'user',\r\n      JSON.stringify({\r\n        id: userData.id,\r\n        name: userData.name,\r\n        email: userData.email,\r\n      })\r\n    );\r\n    setToken(token);\r\n    // After login, fetch the full profile with progress/bookmarks\r\n    fetchUserProfile(token);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // This is a generic function creator for toggling items in a list\r\n  const createOptimisticToggle =\r\n    (\r\n      listName: 'completedQuestions' | 'bookmarkedQuestions',\r\n      endpoint: 'progress' | 'bookmark'\r\n    ) =>\r\n    async (questionId: string) => {\r\n      if (!token || !user) return;\r\n\r\n      // Store the original user state in case we need to revert\r\n      const originalUser = { ...user };\r\n\r\n      const list = user[listName] || [];\r\n      const isAlreadyInList = list.some((q) => q._id === questionId);\r\n\r\n      // Optimistically update the UI right away for a snappy user experience\r\n      const updatedList = isAlreadyInList\r\n        ? list.filter((q) => q._id !== questionId)\r\n        : [...list, { _id: questionId }]; // Note: This is a partial object for the optimistic update\r\n\r\n      setUser({ ...user, [listName]: updatedList as Question[] });\r\n\r\n      // Now, make the actual API call\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/v1/user/${endpoint}`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({ questionId }),\r\n          }\r\n        );\r\n        if (!response.ok) throw new Error(`Failed to update ${endpoint}`);\r\n\r\n        // Re-fetch the full user profile to get the accurate, populated data from the backend\r\n        await fetchUserProfile(token);\r\n      } catch (error) {\r\n        console.error(error);\r\n        // If the API call fails, revert the UI to the original state\r\n        setUser(originalUser);\r\n      }\r\n    };\r\n\r\n  const toggleQuestionProgress = createOptimisticToggle(\r\n    'completedQuestions',\r\n    'progress'\r\n  );\r\n  const toggleQuestionBookmark = createOptimisticToggle(\r\n    'bookmarkedQuestions',\r\n    'bookmark'\r\n  );\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        login,\r\n        logout,\r\n        isAuthenticated: !!token,\r\n        isLoading,\r\n        toggleQuestionProgress,\r\n        toggleQuestionBookmark,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,KAEoC;QAFpC,EACd,GAAG,OAC+C,GAFpC;IAGd,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,KAEgC;QAFhC,EACrB,GAAG,OACkD,GAFhC;IAGrB,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,KAEgC;QAFhC,EACpB,GAAG,OACiD,GAFhC;IAGpB,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,KAEgC;QAFhC,EACnB,GAAG,OACgD,GAFhC;IAGnB,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,KAGgC;QAHhC,EACrB,SAAS,EACT,GAAG,OACkD,GAHhC;IAIrB,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,KAOtB;QAPsB,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ,GAPsB;IAQrB,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,6LAAC,qKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;MAhCS;AAkCT,SAAS,aAAa,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACpB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACpB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAGgC;QAHhC,EACnB,SAAS,EACT,GAAG,OACgD,GAHhC;IAInB,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,KAGgC;QAHhC,EACzB,SAAS,EACT,GAAG,OACsD,GAHhC;IAIzB,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 724, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/custom/AuthModal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from '@/components/ui/dialog';\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useState } from 'react';\r\nimport { Resolver, useForm } from 'react-hook-form'; // Import Resolver\r\nimport { toast } from 'sonner';\r\nimport * as z from 'zod';\r\n\r\n// --- Form Schemas for Validation ---\r\nconst registerSchema = z.object({\r\n  name: z.string().min(2, { message: 'Name must be at least 2 characters.' }),\r\n  email: z.string().email({ message: 'Please enter a valid email.' }),\r\n  password: z\r\n    .string()\r\n    .min(6, { message: 'Password must be at least 6 characters.' }),\r\n});\r\n\r\nconst loginSchema = z.object({\r\n  email: z.string().email({ message: 'Please enter a valid email.' }),\r\n  password: z.string().min(1, { message: 'Password is required.' }),\r\n});\r\n\r\n// A unified type that includes ALL possible fields\r\ntype FormValues = z.infer<typeof registerSchema>;\r\n\r\nexport function AuthModal() {\r\n  const [isLoginView, setIsLoginView] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const { login } = useAuth();\r\n\r\n  const form = useForm<FormValues>({\r\n    // FIX 1: Use a type assertion 'as Resolver<FormValues>' to resolve the type mismatch.\r\n    resolver: zodResolver(\r\n      isLoginView ? loginSchema : registerSchema\r\n    ) as unknown as Resolver<FormValues>,\r\n    defaultValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n  });\r\n\r\n  // FIX 2: The 'values' parameter should match the form's unified type.\r\n  const onSubmit = async (values: FormValues) => {\r\n    const endpoint = isLoginView ? 'login' : 'register';\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/v1/auth/${endpoint}`,\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(values),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Something went wrong');\r\n      }\r\n\r\n      login(data.user, data.token);\r\n      setOpen(false);\r\n\r\n      toast.success(`Welcome, ${data.user.name}!`, {\r\n        description: isLoginView\r\n          ? \"You've successfully logged in.\"\r\n          : 'Your account has been created.',\r\n      });\r\n    } catch (error: unknown) {\r\n      // FIX 3: Use 'unknown' for type safety\r\n      if (error instanceof Error) {\r\n        toast.error('Authentication Failed', {\r\n          description: error.message,\r\n        });\r\n      } else {\r\n        toast.error('Authentication Failed', {\r\n          description: 'An unexpected error occurred.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button>Login / Register</Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>\r\n            {isLoginView ? 'Login' : 'Create an Account'}\r\n          </DialogTitle>\r\n          <DialogDescription>\r\n            {isLoginView\r\n              ? 'Welcome back! Please enter your details.'\r\n              : 'Join us! It only takes a minute.'}\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <Form {...form}>\r\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n            {!isLoginView && (\r\n              <FormField\r\n                control={form.control}\r\n                name=\"name\" // This is now valid\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Name</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"John Doe\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            )}\r\n            <FormField\r\n              control={form.control}\r\n              name=\"email\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"you@example.com\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <FormField\r\n              control={form.control}\r\n              name=\"password\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <FormControl>\r\n                    <Input type=\"password\" placeholder=\"••••••••\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full\"\r\n              disabled={form.formState.isSubmitting}\r\n            >\r\n              {form.formState.isSubmitting\r\n                ? 'Processing...'\r\n                : isLoginView\r\n                ? 'Login'\r\n                : 'Create Account'}\r\n            </Button>\r\n          </form>\r\n        </Form>\r\n        <DialogFooter className=\"pt-4\">\r\n          <Button variant=\"link\" onClick={() => setIsLoginView(!isLoginView)}>\r\n            {isLoginView\r\n              ? 'Need an account? Register'\r\n              : 'Already have an account? Login'}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1071, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/custom/ThemeToggler.tsx"],"sourcesContent":["// src/components/custom/ThemeToggle.tsx\r\n'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { Moon, Sun } from 'lucide-react';\r\nimport { useTheme } from 'next-themes';\r\n\r\nexport const ThemeToggle = () => {\r\n  const { setTheme, theme } = useTheme();\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'dark' ? 'light' : 'dark');\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"ghost\" size=\"icon\" onClick={toggleTheme}>\r\n      {theme === 'dark' ? <Sun /> : <Moon />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;;;AAGxC;AACA;AAAA;AACA;;;AAJA;;;;AAMO,MAAM,cAAc;;IACzB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEnC,MAAM,cAAc;QAClB,SAAS,UAAU,SAAS,UAAU;IACxC;IAEA,qBACE,6LAAC,8HAAA,CAAA,SAAM;QAAC,SAAQ;QAAQ,MAAK;QAAO,SAAS;kBAC1C,UAAU,uBAAS,6LAAC,mMAAA,CAAA,MAAG;;;;qEAAM,6LAAC,qMAAA,CAAA,OAAI;;;;;;;;;;AAGzC;GAZa;;QACiB,mJAAA,CAAA,WAAQ;;;KADzB;uCAcE","debugId":null}},
    {"offset": {"line": 1130, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/custom/Navbar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport Link from 'next/link';\r\nimport { AuthModal } from './AuthModal';\r\nimport ThemeToggle from './ThemeToggler';\r\n\r\nexport function Navbar() {\r\n  const { isAuthenticated, user, logout } = useAuth();\r\n\r\n  return (\r\n    <nav className=\"w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n      <div className=\"container mx-auto flex h-14 max-w-screen-2xl items-center justify-between\">\r\n        <Link href=\"/\" className=\"mr-6 flex items-center space-x-2\">\r\n          <span className=\"font-bold sm:inline-block\">GeekHeaven</span>\r\n        </Link>\r\n        <div className=\"flex items-center gap-4\">\r\n          {isAuthenticated && user ? (\r\n            <>\r\n              <Link href=\"/dashboard\">\r\n                <Button variant=\"ghost\" size=\"sm\">\r\n                  Dashboard\r\n                </Button>\r\n              </Link>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={logout}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <AuthModal />\r\n          )}\r\n          <ThemeToggle />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQO,SAAS;;IACd,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD;IAEhD,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,+JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BACvB,cAAA,6LAAC;wBAAK,WAAU;kCAA4B;;;;;;;;;;;8BAE9C,6LAAC;oBAAI,WAAU;;wBACZ,mBAAmB,qBAClB;;8CACE,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;8CACT,cAAA,6LAAC,8HAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAQ,MAAK;kDAAK;;;;;;;;;;;8CAIpC,6LAAC,8HAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,MAAK;oCAAK,SAAS;8CAAQ;;;;;;;yDAKvD,6LAAC,qIAAA,CAAA,YAAS;;;;;sCAEZ,6LAAC,wIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;;;;;;;AAKtB;GA7BgB;;QAC4B,0HAAA,CAAA,UAAO;;;KADnC","debugId":null}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/custom/ThemeProvider.tsx"],"sourcesContent":["// src/app/providers.tsx\r\n'use client';\r\n\r\nimport {\r\n  ThemeProvider as NextThemesProvider,\r\n  ThemeProviderProps,\r\n} from 'next-themes';\r\n\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\r\n}\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAGxB;AAFA;;;AAOO,SAAS,cAAc,KAA0C;QAA1C,EAAE,QAAQ,EAAE,GAAG,OAA2B,GAA1C;IAC5B,qBAAO,6LAAC,mJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC;KAFgB","debugId":null}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":["file:///D:/MyProjects/web_d_geekHeaven_selection/frontend/components/ui/sonner.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from 'next-themes';\nimport { Toaster as Sonner, ToasterProps } from 'sonner';\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = 'system' } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps['theme']}\n      className=\"toaster group\"\n      style={\n        {\n          '--normal-bg': 'var(--popover)',\n          '--normal-text': 'var(--popover-foreground)',\n          '--normal-border': 'var(--border)',\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,UAAU;QAAC,EAAE,GAAG,OAAqB;;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6LAAC,2IAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf;GAjBM;;QACyB,mJAAA,CAAA,WAAQ;;;KADjC","debugId":null}}]
}